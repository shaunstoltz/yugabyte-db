# Copyright 2019 YugaByte, Inc. and Contributors
#
# Licensed under the Polyform Free Trial License 1.0.0 (the "License"); you
# may not use this file except in compliance with the License. You
# may obtain a copy of the License at
#
# https://github.com/YugaByte/yugabyte-db/blob/master/licenses/POLYFORM-FREE-TRIAL-LICENSE-1.0.0.txt

- name: Ensure we have the proper vars
  assert:
    that:
      - cloud_type is defined
      - use_chrony is defined
      - mount_points is defined

- name: Do we need chrony?
  set_fact:
    should_setup_chrony: "{{ ((cloud_type == 'aws' or cloud_type == 'gcp') and \
                          (use_chrony or \
                          ((ansible_distribution == 'RedHat') and \
                          (ansible_distribution_major_version > '7')))) | bool }}"
    ntp_service_name: "{{ 'ntpd' if ((ansible_distribution != 'Debian') and \
                      (ansible_distribution != 'Ubuntu')) else 'ntp' }}"

- block:
  - name: Install NTP
    become: yes
    become_method: sudo
    package:
      name: ntp
      state: latest

  - block:
    - name: Provision | Stop NTP service
      service:
        enabled: yes
        name: "{{ ntp_service_name }}"
        state: stopped

    - name: Force date/time synchronization with NTP
      become: yes
      become_method: sudo
      shell: ntpd -gq

    when: ansible_distribution != "Debian"

  - name: Provision | Restart NTP service
    service:
      enabled: yes
      name: "{{ ntp_service_name }}"
      state: restarted

  when: "{{ not should_setup_chrony and not air_gap and cloud_type != 'onprem' }}"

- block:
  - name: Uninstall NTP if available
    become: yes
    become_method: sudo
    package:
      name: ntp
      state: absent

  - name: Install and Configure chrony
    include_role:
      name: ansible-chrony
    vars:
      #  per AWS Time Sync docs: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html
      #  per GCP docs:
      #     https://cloud.google.com/container-optimized-os/docs/how-to/create-configure-instance
      chrony_server: "{% if cloud_type == 'aws' %}169.254.169.123 \
                      {% else %}metadata.google.internal \
                      {% endif %} prefer iburst minpoll 4 maxpoll 4"

  - name: Force date/time synchronization with chrony
    become: yes
    become_method: sudo
    shell: chronyc makestep
  when: should_setup_chrony and not air_gap

- name: Provision | Set swappiness off
  sysctl:
    name: vm.swappiness
    value: 0
    state: present

- name: Provision | Create core dump kernel pattern
  sysctl:
    name: kernel.core_pattern
    value: "{{ yb_home_dir }}/cores/core_%e.%p"
    state: present

- name: Provision | Ensure proper permissions for mount paths.
  file:
    mode: 0755
    path: "{{ item }}"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
  with_items: "{{ mount_points.split(',') }}"
